#############################################################################
###########################    LIST COMPREHENSION    ########################
# list comprehension with if + else conditions!!

# a = [1, 2, 6, 3, 4]
#
# result = [num if num % 2 == 0 else num * 10 for num in a]
#
# print(result


#################################################################################
###############################   LAMBDA FUNC    ################################


# конвертиране на str към int

# със стандартна наименована функция
# def convert_to_int(el):
#     return int(el)
#
# nums_as_strings = ["1", "2", "3"]
#
# с list comprehensions + наименованата функция
# #numbers = [convert_to_int(el) for el in nums_as_strings]

# с list comprehensions
# #numbers = [int(el) for el in nums_as_strings]

# с метод map()
# #numbers = list(map(int, nums_as_strings))


# с метод map() и ldmbda func
# #numbers = list(map(lambda el: int(el), nums_as_strings))
# print(numbers)


#############################################################################
###################  filter() МЕТОД  ########################################

# работи само с функция. В този пример проверява кое от числата е четно.


# nums = [1, 2, 3, 4, 5, 6]

# проверка за четни с list comprehension
#evens = [el for el in nums if el % 2 == 0]

# проверка за четни с filter и lambda
# evens = list(filter(lambda x: x % 2 == 0, nums))
#
# print(evens)


#############################################################################################
######################## NESTED COMPREHENSION  ###############################################

# a = [1, 2, 3, 4, 5]
#
# b = [[index, a[index]]for index in range(len(a))]
#
# print(b)

###########################################################################################
########################  sorted()   ######################################################

# пример за sorted() метод за сортиране на уникални елементи от лист с повтарящи се елементи, така че всеки да запазва мястото/поредността си, тъй като set връща елементите на случайни индекси
#sorted() изполва два аргумнета! - това което ще сортира и това по което ще сортира!!!

lst = [1, 1, 4, 2, 37, 2, -1, -85, 3, 4, 5, 65, 65, 65, 4, 1, 2]

print(sorted(set(lst), key=lst.index))



